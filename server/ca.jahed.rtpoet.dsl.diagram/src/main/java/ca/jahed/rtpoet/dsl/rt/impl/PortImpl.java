/**
 * generated by Xtext 2.25.0
 */
package ca.jahed.rtpoet.dsl.rt.impl;

import ca.jahed.rtpoet.dsl.rt.LiteralInteger;
import ca.jahed.rtpoet.dsl.rt.Port;
import ca.jahed.rtpoet.dsl.rt.Protocol;
import ca.jahed.rtpoet.dsl.rt.RtPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Port</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ca.jahed.rtpoet.dsl.rt.impl.PortImpl#getKind <em>Kind</em>}</li>
 *   <li>{@link ca.jahed.rtpoet.dsl.rt.impl.PortImpl#getRegistration <em>Registration</em>}</li>
 *   <li>{@link ca.jahed.rtpoet.dsl.rt.impl.PortImpl#getName <em>Name</em>}</li>
 *   <li>{@link ca.jahed.rtpoet.dsl.rt.impl.PortImpl#isConjugate <em>Conjugate</em>}</li>
 *   <li>{@link ca.jahed.rtpoet.dsl.rt.impl.PortImpl#getType <em>Type</em>}</li>
 *   <li>{@link ca.jahed.rtpoet.dsl.rt.impl.PortImpl#getUpperBound <em>Upper Bound</em>}</li>
 *   <li>{@link ca.jahed.rtpoet.dsl.rt.impl.PortImpl#getRegistrationOverride <em>Registration Override</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PortImpl extends MinimalEObjectImpl.Container implements Port
{
  /**
   * The default value of the '{@link #getKind() <em>Kind</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKind()
   * @generated
   * @ordered
   */
  protected static final String KIND_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKind() <em>Kind</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKind()
   * @generated
   * @ordered
   */
  protected String kind = KIND_EDEFAULT;

  /**
   * The default value of the '{@link #getRegistration() <em>Registration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegistration()
   * @generated
   * @ordered
   */
  protected static final String REGISTRATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRegistration() <em>Registration</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegistration()
   * @generated
   * @ordered
   */
  protected String registration = REGISTRATION_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isConjugate() <em>Conjugate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConjugate()
   * @generated
   * @ordered
   */
  protected static final boolean CONJUGATE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isConjugate() <em>Conjugate</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isConjugate()
   * @generated
   * @ordered
   */
  protected boolean conjugate = CONJUGATE_EDEFAULT;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected Protocol type;

  /**
   * The cached value of the '{@link #getUpperBound() <em>Upper Bound</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpperBound()
   * @generated
   * @ordered
   */
  protected LiteralInteger upperBound;

  /**
   * The default value of the '{@link #getRegistrationOverride() <em>Registration Override</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegistrationOverride()
   * @generated
   * @ordered
   */
  protected static final String REGISTRATION_OVERRIDE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRegistrationOverride() <em>Registration Override</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegistrationOverride()
   * @generated
   * @ordered
   */
  protected String registrationOverride = REGISTRATION_OVERRIDE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PortImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RtPackage.Literals.PORT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKind()
  {
    return kind;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKind(String newKind)
  {
    String oldKind = kind;
    kind = newKind;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RtPackage.PORT__KIND, oldKind, kind));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRegistration()
  {
    return registration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRegistration(String newRegistration)
  {
    String oldRegistration = registration;
    registration = newRegistration;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RtPackage.PORT__REGISTRATION, oldRegistration, registration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RtPackage.PORT__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isConjugate()
  {
    return conjugate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConjugate(boolean newConjugate)
  {
    boolean oldConjugate = conjugate;
    conjugate = newConjugate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RtPackage.PORT__CONJUGATE, oldConjugate, conjugate));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Protocol getType()
  {
    if (type != null && type.eIsProxy())
    {
      InternalEObject oldType = (InternalEObject)type;
      type = (Protocol)eResolveProxy(oldType);
      if (type != oldType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RtPackage.PORT__TYPE, oldType, type));
      }
    }
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Protocol basicGetType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(Protocol newType)
  {
    Protocol oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RtPackage.PORT__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LiteralInteger getUpperBound()
  {
    return upperBound;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUpperBound(LiteralInteger newUpperBound, NotificationChain msgs)
  {
    LiteralInteger oldUpperBound = upperBound;
    upperBound = newUpperBound;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RtPackage.PORT__UPPER_BOUND, oldUpperBound, newUpperBound);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUpperBound(LiteralInteger newUpperBound)
  {
    if (newUpperBound != upperBound)
    {
      NotificationChain msgs = null;
      if (upperBound != null)
        msgs = ((InternalEObject)upperBound).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RtPackage.PORT__UPPER_BOUND, null, msgs);
      if (newUpperBound != null)
        msgs = ((InternalEObject)newUpperBound).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RtPackage.PORT__UPPER_BOUND, null, msgs);
      msgs = basicSetUpperBound(newUpperBound, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RtPackage.PORT__UPPER_BOUND, newUpperBound, newUpperBound));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRegistrationOverride()
  {
    return registrationOverride;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRegistrationOverride(String newRegistrationOverride)
  {
    String oldRegistrationOverride = registrationOverride;
    registrationOverride = newRegistrationOverride;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RtPackage.PORT__REGISTRATION_OVERRIDE, oldRegistrationOverride, registrationOverride));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RtPackage.PORT__UPPER_BOUND:
        return basicSetUpperBound(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RtPackage.PORT__KIND:
        return getKind();
      case RtPackage.PORT__REGISTRATION:
        return getRegistration();
      case RtPackage.PORT__NAME:
        return getName();
      case RtPackage.PORT__CONJUGATE:
        return isConjugate();
      case RtPackage.PORT__TYPE:
        if (resolve) return getType();
        return basicGetType();
      case RtPackage.PORT__UPPER_BOUND:
        return getUpperBound();
      case RtPackage.PORT__REGISTRATION_OVERRIDE:
        return getRegistrationOverride();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RtPackage.PORT__KIND:
        setKind((String)newValue);
        return;
      case RtPackage.PORT__REGISTRATION:
        setRegistration((String)newValue);
        return;
      case RtPackage.PORT__NAME:
        setName((String)newValue);
        return;
      case RtPackage.PORT__CONJUGATE:
        setConjugate((Boolean)newValue);
        return;
      case RtPackage.PORT__TYPE:
        setType((Protocol)newValue);
        return;
      case RtPackage.PORT__UPPER_BOUND:
        setUpperBound((LiteralInteger)newValue);
        return;
      case RtPackage.PORT__REGISTRATION_OVERRIDE:
        setRegistrationOverride((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RtPackage.PORT__KIND:
        setKind(KIND_EDEFAULT);
        return;
      case RtPackage.PORT__REGISTRATION:
        setRegistration(REGISTRATION_EDEFAULT);
        return;
      case RtPackage.PORT__NAME:
        setName(NAME_EDEFAULT);
        return;
      case RtPackage.PORT__CONJUGATE:
        setConjugate(CONJUGATE_EDEFAULT);
        return;
      case RtPackage.PORT__TYPE:
        setType((Protocol)null);
        return;
      case RtPackage.PORT__UPPER_BOUND:
        setUpperBound((LiteralInteger)null);
        return;
      case RtPackage.PORT__REGISTRATION_OVERRIDE:
        setRegistrationOverride(REGISTRATION_OVERRIDE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RtPackage.PORT__KIND:
        return KIND_EDEFAULT == null ? kind != null : !KIND_EDEFAULT.equals(kind);
      case RtPackage.PORT__REGISTRATION:
        return REGISTRATION_EDEFAULT == null ? registration != null : !REGISTRATION_EDEFAULT.equals(registration);
      case RtPackage.PORT__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case RtPackage.PORT__CONJUGATE:
        return conjugate != CONJUGATE_EDEFAULT;
      case RtPackage.PORT__TYPE:
        return type != null;
      case RtPackage.PORT__UPPER_BOUND:
        return upperBound != null;
      case RtPackage.PORT__REGISTRATION_OVERRIDE:
        return REGISTRATION_OVERRIDE_EDEFAULT == null ? registrationOverride != null : !REGISTRATION_OVERRIDE_EDEFAULT.equals(registrationOverride);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (kind: ");
    result.append(kind);
    result.append(", registration: ");
    result.append(registration);
    result.append(", name: ");
    result.append(name);
    result.append(", conjugate: ");
    result.append(conjugate);
    result.append(", registrationOverride: ");
    result.append(registrationOverride);
    result.append(')');
    return result.toString();
  }

} //PortImpl
